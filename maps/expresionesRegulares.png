<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta http-equiv="X-UA-Compatible" content="ie=edge">
<title>Markmap</title>
<style>
* {
  margin: 0;
  padding: 0;
}
#mindmap {
  display: block;
  width: 100vw;
  height: 100vh;
}
</style>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@highlightjs/cdn-assets@11.8.0/styles/default.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/markmap-toolbar@0.17.0/dist/style.css">
</head>
<body>
<svg id="mindmap"></svg>
<script src="https://cdn.jsdelivr.net/npm/d3@7.8.5/dist/d3.min.js"></script><script src="https://cdn.jsdelivr.net/npm/markmap-view@0.17.0/dist/browser/index.js"></script><script src="https://cdn.jsdelivr.net/npm/markmap-toolbar@0.17.0/dist/index.js"></script><script>(r => {
                setTimeout(r);
              })(() => {
  const {
    markmap,
    mm
  } = window;
  const {
    el
  } = markmap.Toolbar.create(mm);
  el.setAttribute('style', 'position:absolute;bottom:20px;right:20px');
  document.body.append(el);
})</script><script>((getMarkmap, getOptions, root2, jsonOptions) => {
              const markmap = getMarkmap();
              window.mm = markmap.Markmap.create(
                "svg#mindmap",
                (getOptions || markmap.deriveOptions)(jsonOptions),
                root2
              );
            })(() => window.markmap,null,{"content":"Curso de Expresiones Regulares en JavaScript","children":[{"content":"Introducción","children":[{"content":"¿Qué son las expresiones regulares?","children":[{"content":"Secuencias de caracteres que forman un patrón de búsqueda.","children":[],"payload":{"lines":"4,5"}},{"content":"Utilizadas para realizar coincidencias, sustituciones y validaciones de texto.","children":[],"payload":{"lines":"5,7"}}],"payload":{"lines":"3,4"}},{"content":"Uso de Expresiones Regulares en JavaScript","children":[{"content":"Métodos principales:","children":[{"content":"<code>test()</code>","children":[],"payload":{"lines":"9,10"}},{"content":"<code>exec()</code>","children":[],"payload":{"lines":"10,11"}},{"content":"<code>match()</code>","children":[],"payload":{"lines":"11,12"}},{"content":"<code>replace()</code>","children":[],"payload":{"lines":"12,13"}},{"content":"<code>search()</code>","children":[],"payload":{"lines":"13,14"}},{"content":"<code>split()</code>","children":[],"payload":{"lines":"14,16"}}],"payload":{"lines":"8,16"}}],"payload":{"lines":"7,8"}}],"payload":{"lines":"2,3"}},{"content":"Sintaxis Básica","children":[{"content":"Literales y Metacaracteres","children":[{"content":"Literales: <code>a</code>, <code>b</code>, <code>1</code>, <code>2</code>, <code>A</code>, <code>B</code>","children":[],"payload":{"lines":"18,19"}},{"content":"Metacaracteres: <code>.</code>, <code>^</code>, <code>$</code>, <code>*</code>, <code>+</code>, <code>?</code>, <code>{}</code>, <code>[]</code>, <code>()</code>, <code>|</code>, <code>\\</code>","children":[],"payload":{"lines":"19,21"}}],"payload":{"lines":"17,18"}},{"content":"Ejemplo","children":[{"content":"<pre><code class=\"language-javascript\"><span class=\"hljs-keyword\">const</span> regex = <span class=\"hljs-regexp\">/abc/</span>;\n<span class=\"hljs-keyword\">const</span> testString = <span class=\"hljs-string\">\"abcdef\"</span>;\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(regex.<span class=\"hljs-title function_\">test</span>(testString)); <span class=\"hljs-comment\">// true</span>\n</code></pre>","children":[]}],"payload":{"lines":"21,22"}}],"payload":{"lines":"16,17"}}],"payload":{"lines":"0,1"}},{})</script>
</body>
</html>
